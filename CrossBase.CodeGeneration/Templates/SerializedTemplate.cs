// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CrossBase.CodeGeneration.Templates
{
    using System.Collections.Generic;
    using CodeGeneration.Language;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class SerializedTemplate : CodeGeneration.Templates.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 5 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"

	public override void Render()
	{
		var classes = Parser.GetAllClassesThatHaveAnAttribute("Serialized");
		
		foreach(var @class in classes)
		{
			Generate(@class);
		}

		base.Render();
	}

	private void Generate(Class @class)
    {
		foreach(var attribute in @class.Attributes)
		{
			if (attribute.Name != "Serialized")
				continue;
			var fileName = attribute.FileName;
			var projectItem = Parser.GetProjectItem(fileName);
			var outputFileName = fileName.Replace(".cs", ".Serialized.g.cs");
			GenerateHeader();
			GenerateUsings(@class, new List<string> { "System", "System.IO", "System.Xml.Serialization", "CrossBase.Reflection", "CrossBase.Common"});

        
        #line default
        #line hidden
        
        #line 29 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 31 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 31 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 33 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 33 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write("\r\n    {\r\n        private static XmlSerializer serializer;\r\n\t\r\n        protected s" +
        "tatic XmlSerializer Serializer\r\n\t\t{\r\n\t\t\tget\r\n\t\t\t{\r\n\t\t\t\tif (serializer == null)\r\n" +
        "\t\t\t\t{\r\n\t            \tserializer = new XmlSerializer(typeof(");

        
        #line default
        #line hidden
        
        #line 43 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 43 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write("), ReflectionHelper.GetDerivedTypes(typeof(");

        
        #line default
        #line hidden
        
        #line 43 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 43 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(")));\r\n\t\t\t\t}\r\n\t\t\t\treturn serializer;\r\n\t\t\t}\r\n\t\t}\r\n\r\n        public static ");

        
        #line default
        #line hidden
        
        #line 49 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 49 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(" DeserializeFromString(string s)\r\n        {\r\n            var reader = new StringR" +
        "eader(s);\r\n            var ss = (");

        
        #line default
        #line hidden
        
        #line 52 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 52 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(@")Serializer.Deserialize(reader);
            reader.Close();
            return ss;
        }

        public string SerializeToString()
        {
            var writer = new StringWriter();
            Serializer.Serialize(writer, this);
            var s = writer.ToString();
            writer.Close();
            return s;
        }
		
        public static ");

        
        #line default
        #line hidden
        
        #line 66 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 66 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(" DeserializeFromFile(string s)\r\n        {\r\n            TextReader reader = new St" +
        "reamReader(s);\r\n            var obj = (");

        
        #line default
        #line hidden
        
        #line 69 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 69 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(@")Serializer.Deserialize(reader);
            reader.Close();
            return obj;
        }

        public void SerializeToFile(string s)
        {
            TextWriter writer = new StreamWriter(s);
            Serializer.Serialize(writer, this);
            writer.Close();
        }
		
        public static ");

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(" DeserializeFromFileOrDefault(string fileName, ");

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(" default");

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 81 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(")\r\n        {\r\n            if (SystemServices.FileSystem.FileExists(fileName))\r\n  " +
        "          {\r\n                default");

        
        #line default
        #line hidden
        
        #line 85 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 85 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(" = DeserializeFromFile(fileName);\r\n            }\r\n            else\r\n            {" +
        "\r\n                default");

        
        #line default
        #line hidden
        
        #line 89 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 89 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(".SerializeToFile(fileName);\r\n            }\r\n            return default");

        
        #line default
        #line hidden
        
        #line 91 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 91 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"
this.Write(";\r\n        }\r\n\r\n\t}\r\n\t\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 98 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\SerializedTemplate.tt"

			GenerateFooter();
			debugOutput += string.Format("Generated {0}\r\n", outputFileName);
			Delete(projectItem, outputFileName);
			Save(projectItem, outputFileName);
		}
    }

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
