// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CrossBase.CodeGeneration.Templates
{
    using Attributes;
    using Language;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class EventPropertyTemplate : CrossBase.CodeGeneration.Templates.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 6 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

	public override void Render()
	{
	    Name = "EventProperty Generator";
		debugOutput = string.Empty;
		var classes = Parser.GetAllClassesThatContainPrivateFieldWithAnAttribute("EventProperty");
		
		foreach(var @class in classes)
		{
			GenerateClass(@class);
		}

	    base.Render();
	}

	private void GenerateClass(Class @class)
    {
		var fields = new List<Field>();
		foreach(var field in @class.Fields)
		{
			if (field.Access == Access.Private)
			{
				foreach (var attribute in field.Attributes)
				{
					if (attribute.Name == "EventProperty")
					{
						fields.Add(field);
					}
				}
			}
		}
		
		GenerateNotifyChanged(@class, fields);
		GenerateNotifyChangedInterface(@class, fields);

		foreach (var field in fields)
		{
			GenerateField(@class, field);
		}
    }

	private bool GenerateForEventProperty(string mode)
    {
		return mode == EventPropertyAttribute.NotifyPropertyAndEventProperty || 
			   mode == EventPropertyAttribute.EventPropertyOnly;
    }

	private bool GenerateForNotifyProperty(string mode)
    {
		return mode == EventPropertyAttribute.NotifyPropertyAndEventProperty || 
			   mode == EventPropertyAttribute.NotifyPropertyOnly;
    }

	private bool GetBoolArgumentFromAttribute(CrossBase.CodeGeneration.Language.Attribute attribute, string name)
    {
		var argument = attribute.Arguments.Find(a=>a.Name == name);
		return argument != null && argument.Value == "true";
    }

	private string GetStringArgumentFromAttribute(CrossBase.CodeGeneration.Language.Attribute attribute, string name, string defaultValue)
    {
		var argument = attribute.Arguments.Find(a=>a.Name == name);
		return argument == null ? defaultValue : argument.Value;
    }

	private void GenerateField(Class @class, Field field)
    {
		var propertyName = field.GetDefaultPublicPropertyName();
		var propertyType = field.Type;
		var fieldName = field.Name;
		var changingEventArgs =  @class.Name + propertyName + "ChangingEventArgs";
		var changedEventArgs =   @class.Name + propertyName + "ChangedEventArgs";
		var attribute = field.Attributes.Find(a=>a.Name == "EventProperty");
		var generateAlwaysUpdate = GetBoolArgumentFromAttribute(attribute, "GenerateAlwaysUpdate");
		var generateSetters = GetBoolArgumentFromAttribute(attribute, "GenerateSetters");
		var generationMode = GetStringArgumentFromAttribute(attribute, "GenerationMode", EventPropertyAttribute.NotifyPropertyAndEventProperty);

		var fileName = attribute.FileName;
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "." + propertyName + "EventProperty.g.cs");
		GenerateHeader();
		GenerateUsings(@class, new List<string> { "System", @class.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 88 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("namespace ");

        
        #line default
        #line hidden
        
        #line 89 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 89 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 91 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 91 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\n    {\r\n\t\t//private ");

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" in ");

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fileName));

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" (");

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(generationMode));

        
        #line default
        #line hidden
        
        #line 93 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(")\r\n");

        
        #line default
        #line hidden
        
        #line 94 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
         
		if (GenerateForEventProperty(generationMode))
		{
        
        #line default
        #line hidden
        
        #line 96 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("        \r\n\t\tpublic event EventHandler<");

        
        #line default
        #line hidden
        
        #line 97 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changingEventArgs));

        
        #line default
        #line hidden
        
        #line 97 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 97 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 97 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing;\r\n\t\tprivate void Invoke");

        
        #line default
        #line hidden
        
        #line 98 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 98 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing(");

        
        #line default
        #line hidden
        
        #line 98 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changingEventArgs));

        
        #line default
        #line hidden
        
        #line 98 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" e)\r\n        {\r\n            var handler = ");

        
        #line default
        #line hidden
        
        #line 100 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 100 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing;\r\n            if (handler != null) handler(this, e);\r\n        }\r\n\r\n    \t" +
        "public event EventHandler<");

        
        #line default
        #line hidden
        
        #line 104 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 104 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("> ");

        
        #line default
        #line hidden
        
        #line 104 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 104 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed;\r\n\t    private void Invoke");

        
        #line default
        #line hidden
        
        #line 105 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 105 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed(");

        
        #line default
        #line hidden
        
        #line 105 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 105 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" e)\r\n\t    {\r\n\t        var handler = ");

        
        #line default
        #line hidden
        
        #line 107 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 107 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed;\r\n\t        if (handler != null) handler(this, e);\r\n\t    }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 111 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		}
        
        #line default
        #line hidden
        
        #line 112 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\tpublic ");

        
        #line default
        #line hidden
        
        #line 113 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 113 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 113 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 113 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\n        {\r\n            get { return ");

        
        #line default
        #line hidden
        
        #line 115 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 115 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("; }\r\n            set\r\n            {\r\n                var old = ");

        
        #line default
        #line hidden
        
        #line 118 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 118 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 119 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
		if (!generateAlwaysUpdate)
		{

        
        #line default
        #line hidden
        
        #line 122 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t\tif (old == value)\r\n                    return;\r\n");

        
        #line default
        #line hidden
        
        #line 124 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
		}
        
        #line default
        #line hidden
        
        #line 124 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" \r\n\r\n");

        
        #line default
        #line hidden
        
        #line 126 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
		if (GenerateForEventProperty(generationMode))
		{

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t\tvar changingEventArgs = new ");

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changingEventArgs));

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" { Old");

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = old, New");

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 129 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = value };\r\n\t\t\t\t\r\n\t\t\t\tOn");

        
        #line default
        #line hidden
        
        #line 131 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 131 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing(changingEventArgs);\r\n                if (changingEventArgs.Cancel)\r\n    " +
        "                return;\r\n\t\t\t\t\t\r\n\t\t\t\tInvoke");

        
        #line default
        #line hidden
        
        #line 135 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 135 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing(changingEventArgs);\r\n                if (changingEventArgs.Cancel)\r\n    " +
        "                return;\r\n\t\t\t\tvalue = changingEventArgs.New");

        
        #line default
        #line hidden
        
        #line 138 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 138 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(";\r\n");

        
        #line default
        #line hidden
        
        #line 139 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		}
 
        
        #line default
        #line hidden
        
        #line 141 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 142 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 142 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = value;\r\n\t\t\t\t\r\n");

        
        #line default
        #line hidden
        
        #line 144 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
		if (GenerateForEventProperty(generationMode))
		{

        
        #line default
        #line hidden
        
        #line 147 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("                var changedEventArgs = new ");

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" { Old");

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = old, New");

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 148 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = value };\r\n\t\t\t\tOn");

        
        #line default
        #line hidden
        
        #line 149 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 149 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed(changedEventArgs);\r\n                Invoke");

        
        #line default
        #line hidden
        
        #line 150 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 150 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed(changedEventArgs);\r\n");

        
        #line default
        #line hidden
        
        #line 151 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
        }
		if (GenerateForNotifyProperty(generationMode))
		{

        
        #line default
        #line hidden
        
        #line 155 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t\tNotifyPropertyChanged(\"");

        
        #line default
        #line hidden
        
        #line 156 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 156 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\");\r\n");

        
        #line default
        #line hidden
        
        #line 157 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
		} 


        
        #line default
        #line hidden
        
        #line 159 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t}\r\n        }\r\n\t\r\n");

        
        #line default
        #line hidden
        
        #line 162 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
		if (GenerateForEventProperty(generationMode))
		{

        
        #line default
        #line hidden
        
        #line 165 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\tprotected void On");

        
        #line default
        #line hidden
        
        #line 165 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 165 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changing(");

        
        #line default
        #line hidden
        
        #line 165 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changingEventArgs));

        
        #line default
        #line hidden
        
        #line 165 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" e) {}\r\n\t\tprotected void On");

        
        #line default
        #line hidden
        
        #line 166 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 166 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Changed(");

        
        #line default
        #line hidden
        
        #line 166 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 166 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" e) {}\r\n");

        
        #line default
        #line hidden
        
        #line 167 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
        }
		if (generateSetters)
		{

        
        #line default
        #line hidden
        
        #line 171 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\tpublic void Set");

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("(");

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" new");

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 172 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t");

        
        #line default
        #line hidden
        
        #line 174 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 174 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = new");

        
        #line default
        #line hidden
        
        #line 174 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 174 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(";\r\n\t\t}\r\n\r\n\t\tpublic void Set");

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("Silently(");

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" new");

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 177 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(")\r\n\t\t{\r\n\t\t\t ");

        
        #line default
        #line hidden
        
        #line 179 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(fieldName));

        
        #line default
        #line hidden
        
        #line 179 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" = new");

        
        #line default
        #line hidden
        
        #line 179 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 179 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(";\r\n\t\t}\r\n");

        
        #line default
        #line hidden
        
        #line 181 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		}

        
        #line default
        #line hidden
        
        #line 183 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t}\r\n");

        
        #line default
        #line hidden
        
        #line 184 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
 
		if (GenerateForEventProperty(generationMode))
		{
	

        
        #line default
        #line hidden
        
        #line 188 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("    \r\n\tpublic class ");

        
        #line default
        #line hidden
        
        #line 190 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changingEventArgs));

        
        #line default
        #line hidden
        
        #line 190 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" : ");

        
        #line default
        #line hidden
        
        #line 190 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 190 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\n    {\r\n        public bool Cancel { get; set; }\r\n    }\r\n\r\n    public class ");

        
        #line default
        #line hidden
        
        #line 195 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(changedEventArgs));

        
        #line default
        #line hidden
        
        #line 195 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(": EventArgs\r\n    {\r\n        public ");

        
        #line default
        #line hidden
        
        #line 197 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 197 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" New");

        
        #line default
        #line hidden
        
        #line 197 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 197 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" { get; set; }\r\n        public ");

        
        #line default
        #line hidden
        
        #line 198 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 198 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" Old");

        
        #line default
        #line hidden
        
        #line 198 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 198 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" { get; set; }\r\n\t}\r\n");

        
        #line default
        #line hidden
        
        #line 200 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

        }
        
        #line default
        #line hidden
        
        #line 201 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("}\r\n");

        
        #line default
        #line hidden
        
        #line 203 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
    }

	private string GetGenerationModeForClass(List<Field> fields)
    {
		var generationMode = string.Empty;
		foreach(var field in fields)
        {
			var attribute = field.Attributes.Find(a=>a.Name == "EventProperty");
			var newGenerationMode = GetStringArgumentFromAttribute(attribute, "GenerationMode", EventPropertyAttribute.NotifyPropertyAndEventProperty);

			if (generationMode == string.Empty)
            {
				generationMode = newGenerationMode;
            }
			else if (generationMode != newGenerationMode)
            {
				generationMode = EventPropertyAttribute.NotifyPropertyAndEventProperty;
            }

			if (generationMode == EventPropertyAttribute.NotifyPropertyAndEventProperty)
				break;
        }

		return generationMode;
    }

	public void GenerateNotifyChangedInterface(Class @class, List<Field> fields)
    {
		var generationMode = GetGenerationModeForClass(fields);
		if (!GenerateForNotifyProperty(generationMode))
			return;
		
		var fileName = @class.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".EventPropertyInterface.g.cs");
		
		GenerateHeader();
		GenerateUsings(@class, new List<string> { "System", "System.ComponentModel", @class.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 246 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 248 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 248 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\r\n{\r\n    public interface I");

        
        #line default
        #line hidden
        
        #line 250 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 250 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("EventProperties\r\n    {\r\n\t\tevent PropertyChangedEventHandler PropertyChanged;\r\n");

        
        #line default
        #line hidden
        
        #line 253 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

	    foreach (var field in fields)
	    {
	        var propertyName = field.GetDefaultPublicPropertyName();
			var propertyType = field.Type;

        
        #line default
        #line hidden
        
        #line 258 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\t\t");

        
        #line default
        #line hidden
        
        #line 259 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyType));

        
        #line default
        #line hidden
        
        #line 259 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 259 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(propertyName));

        
        #line default
        #line hidden
        
        #line 259 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(" { get;set; }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 261 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"


		
	    }

        
        #line default
        #line hidden
        
        #line 265 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 270 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

	public void GenerateNotifyChanged(Class @class, List<Field> fields)
    {
		var generationMode = GetGenerationModeForClass(fields);
		if (!GenerateForNotifyProperty(generationMode))
			return;
		
		var fileName = @class.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".PropertyEvents.g.cs");
		
		GenerateHeader();
		GenerateUsings(@class, new List<string> { "System", "System.ComponentModel", @class.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 289 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 291 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 291 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 293 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@class.Name));

        
        #line default
        #line hidden
        
        #line 293 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"
this.Write("\r\n    {\r\n\t\tpublic event PropertyChangedEventHandler PropertyChanged;\r\n\r\n\t\tprivate" +
        " void NotifyPropertyChanged(String info)\r\n\t\t{\r\n\t\t\tif (PropertyChanged != null)\r\n" +
        "\t\t\t{\r\n\t\t\t\tPropertyChanged(this, new PropertyChangedEventArgs(info));\r\n\t\t\t}\r\n\t\t}\r" +
        "\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 307 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\EventPropertyTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
