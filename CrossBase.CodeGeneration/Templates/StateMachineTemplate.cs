// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CrossBase.CodeGeneration.Templates
{
    using Attributes;
    using CrossBase.StateMachine;
    using Language;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class StateMachineTemplate : CrossBase.CodeGeneration.Templates.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 9 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

    private const string attributeName = "StateMachine";
    private string initialState;
    private string transitionsString;
    private List<Trans> transitions;
    private List<string> states;
    private Class currentClass;
    private List<string> events;
    private string specialString;
    private List<Spec> specials;
    private List<string> namespaces;

    public static bool IsGraphvizInstalled()
    {
        try
        {
            var command = String.Format("-?");
                
            var processInfo = new ProcessStartInfo("dot", command)
            {
                CreateNoWindow = false,
                UseShellExecute = false,
                RedirectStandardOutput = true,
                RedirectStandardError = true
            };
            var process = Process.Start(processInfo);
            var std = process.StandardOutput.ReadToEnd();
            var error = process.StandardError.ReadToEnd();
            process.WaitForExit();
            process.Close();

            return std.StartsWith("Usage: dot");
        }
        catch (Exception)
        {
            return false;
        }
    }

    private static string GenerateImageFromDotFile(string fileName, string dotFileName, string type)
    {
        var imageFileName = string.Format("{0}.{1}", fileName, type);
        var command = String.Format("-T{2} \"{0}\" -o\"{1}\"", dotFileName, imageFileName, type);
        var processInfo = new ProcessStartInfo("dot", command)
        {
            CreateNoWindow = false,
            UseShellExecute = false,
        };
        var process = Process.Start(processInfo);
        process.WaitForExit();
        process.Close();
        return imageFileName;
    }


    

    public class Trans
    {
        public string Current { get; set; }        
        public string Event { get; set; }        
        public string Next { get; set; }        
    }

    public class Spec
    {
        public string Event { get; set; }        
        public string Next { get; set; }        
    }


    public override void Render()
	{
	    Name = "StateMachine Generator";
		debugOutput = string.Empty;
		var classes = Parser.GetAllClassesThatHaveAnAttribute(attributeName);
		
		foreach(var @class in classes)
		{
		    currentClass = @class;
			GenerateClass();
		}

	    base.Render();
	}

	

	private void GenerateClass()
    {
        
	    foreach (var attribute in currentClass.Attributes)
	    {
	        if (attribute.Name != attributeName)
	            continue;
    	    initialState = @attribute.GetArgument("InitState") + "State";
    	    transitionsString = @attribute.GetArgument("Transitions");
            specialString = @attribute.GetArgument("Special");
	        break;
	    }

	    namespaces = new List<string>
	    {
	        "System",
	        "CrossBase.StateMachine",
	        "CrossBase.Dispatch",
	        "CrossBase.Log",
	        @currentClass.Namespace.Name
	    };

	    GetTransistions();
	    GetSpecials();
        GetStates();
        GetEvents();
	    GenerateBaseState();
	    GenerateStateClasses();
        GenerateInterface();
	    GenerateMachine();
	    GenerateTransitions();
	    GenerateEvents();
	    GenerateContext();
	    GenerateContextInterface();
	    GenerateStateEventArgs();
	    GenerateDotFromTransitions();
    }

    

    private void GenerateStateClasses()
    {
        foreach (var state in states)
        {
            GenerateStateClass(state);
            GenerateStateEventArgs(state);
        }
    }

    private void GetStates()
    {

        states = new List<string> {initialState};
        foreach (var t in transitions)
        {
            AddState(t.Current);
            AddState(t.Next);
        }
    }

    private void GetEvents()
    {
        events = new List<string>();
        foreach (var t in transitions)
        {
            AddEvent(t.Event);
        }

        foreach (var t in specials)
        {
            AddEvent(t.Event);
        }
    }

    private void AddEvent(string s)
    {
        if (!events.Contains(s)) events.Add(s);
    }


    private void AddState(string s)
    {
        if (!states.Contains(s)) states.Add(s);
    }

    private void GetSpecials()
    {
        specials = new List<Spec>();
        foreach (var special in Split(specialString, ';'))
        {
            SplitSpecial(special);
        }
    }

    private void SplitSpecial(string special)
    {
        special = special.Trim();
        var regex = new Regex("\\s*(?<Event>\\w+)\\s*->\\s*(?<Next>\\w+)\\s*",RegexOptions.CultureInvariant| RegexOptions.Compiled);
        var m = regex.Match(special);

        if (m.Success)
        {
            specials.Add(new Spec{Event = m.Groups["Event"].Value, Next = m.Groups["Next"].Value + "State"});
        }
    }


    private void GetTransistions()
    {
        transitions = new List<Trans>();
        foreach (var transition in Split(transitionsString, ';'))
        {
            SplitTransition(transition);
        }
    }

    private void SplitTransition(string transition)
    {
        transition = transition.Trim();
        var regex = new Regex("\\s*(?<Current>\\w+)\\s*\\|\\s*(?<Event>\\w+)\\s*->\\s*(?<Next>\\w+)\\s*",RegexOptions.CultureInvariant| RegexOptions.Compiled);
        var m = regex.Match(transition);

        if (m.Success)
        {
            transitions.Add(new Trans{Current = m.Groups["Current"].Value + "State", Event = m.Groups["Event"].Value, Next = m.Groups["Next"].Value + "State"});
        }
    }

    private static IEnumerable<string> Split(string s, char c)
    {
        return s.Split(new[] {c}, StringSplitOptions.RemoveEmptyEntries);
    }

    private void GenerateContextInterface()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".Context.Interface.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 238 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 240 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 240 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial interface I");

        
        #line default
        #line hidden
        
        #line 242 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 242 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context: IStateContext\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 247 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}
   
    private void GenerateContext()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".Context.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 262 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 264 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 264 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 266 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 266 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context: I");

        
        #line default
        #line hidden
        
        #line 266 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 266 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 271 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

    private void GenerateBaseState()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "StateBase.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 286 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 288 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 288 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateBase: BaseState<I");

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", I");

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context, ");

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 290 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent>\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 295 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

     private void GenerateStateEventArgs()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "StateChangedEventArgs.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 310 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 312 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 312 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 314 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 314 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateChangedEventArgs:StateChangedEventArgsBase\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 319 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

    private void GenerateInterface()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "Interface.g.cs");
		
		GenerateHeader();

		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 335 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 337 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 337 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public interface I");

        
        #line default
        #line hidden
        
        #line 339 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 339 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(": IStateMachine<");

        
        #line default
        #line hidden
        
        #line 339 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 339 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent>\r\n    {\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 342 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var s in states)
        {

        
        #line default
        #line hidden
        
        #line 345 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        event EventHandler<");

        
        #line default
        #line hidden
        
        #line 346 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 346 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 346 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 346 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave;\r\n        event EventHandler<");

        
        #line default
        #line hidden
        
        #line 347 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 347 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 347 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 347 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter;\r\n");

        
        #line default
        #line hidden
        
        #line 348 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 350 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 354 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateMachine()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".g.cs");
		
		GenerateHeader();

		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 371 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 373 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 373 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 375 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 375 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(": StateMachineBase< I");

        
        #line default
        #line hidden
        
        #line 375 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 375 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context,  \r\n                                                                     " +
        " ");

        
        #line default
        #line hidden
        
        #line 376 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 376 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Transitions, \r\n                                                                  " +
        "    ");

        
        #line default
        #line hidden
        
        #line 377 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 377 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateChangedEventArgs, \r\n                                                        " +
        "              ");

        
        #line default
        #line hidden
        
        #line 378 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 378 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent>, I");

        
        #line default
        #line hidden
        
        #line 378 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 378 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n    {\r\n        public ");

        
        #line default
        #line hidden
        
        #line 380 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 380 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(ILogger log, IDispatcher dispatcher, I");

        
        #line default
        #line hidden
        
        #line 380 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 380 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context context) : base(log, dispatcher, context)\r\n        {\r\n        }\r\n\r\n      " +
        "  protected override void OnEnteringNextState(");

        
        #line default
        #line hidden
        
        #line 384 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 384 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateChangedEventArgs e)\r\n        {\r\n            base.OnEnteringNextState(e);\r\n");

        
        #line default
        #line hidden
        
        #line 387 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        var isFirstRender = true;
        foreach (var s in states)
        {
            var ifstatement = isFirstRender ? "if" : "else if";
            isFirstRender = false;

        
        #line default
        #line hidden
        
        #line 393 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 394 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(ifstatement));

        
        #line default
        #line hidden
        
        #line 394 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(e.PrevState is ");

        
        #line default
        #line hidden
        
        #line 394 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 394 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(")\r\n            {\r\n                On");

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave(new  ");

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs {  ");

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = e.PrevState as  ");

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Event = (");

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 396 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent)e.StateEvent });\r\n            }\r\n                        \r\n");

        
        #line default
        #line hidden
        
        #line 399 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 402 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        isFirstRender = true;
        foreach (var s in states)
        {
            var ifstatement = isFirstRender ? "if" : "else if";
            isFirstRender = false;

        
        #line default
        #line hidden
        
        #line 408 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 409 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(ifstatement));

        
        #line default
        #line hidden
        
        #line 409 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(e.NextState is ");

        
        #line default
        #line hidden
        
        #line 409 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 409 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(")\r\n            {\r\n                On");

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter(new  ");

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs {  ");

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = e.NextState as  ");

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Event = (");

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 411 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent)e.StateEvent });\r\n            }\r\n                        \r\n");

        
        #line default
        #line hidden
        
        #line 414 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 416 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 419 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var s in states)
        {

        
        #line default
        #line hidden
        
        #line 422 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        public event EventHandler<");

        
        #line default
        #line hidden
        
        #line 423 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 423 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 423 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 423 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave;\r\n        protected virtual void On");

        
        #line default
        #line hidden
        
        #line 424 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 424 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave(");

        
        #line default
        #line hidden
        
        #line 424 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 424 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs e)\r\n        {\r\n            var handler = ");

        
        #line default
        #line hidden
        
        #line 426 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 426 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave;\r\n            if (handler != null) handler(this, e);\r\n        }\r\n        pu" +
        "blic event EventHandler<");

        
        #line default
        #line hidden
        
        #line 429 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 429 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 429 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 429 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter;\r\n        protected virtual void On");

        
        #line default
        #line hidden
        
        #line 430 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 430 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter(");

        
        #line default
        #line hidden
        
        #line 430 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 430 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs e)\r\n        {\r\n            var handler = ");

        
        #line default
        #line hidden
        
        #line 432 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 432 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter;\r\n            if (handler != null) handler(this, e);\r\n        }\r\n");

        
        #line default
        #line hidden
        
        #line 435 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 437 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 441 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


	public void GenerateStateClass(string state)
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "." + state + ".g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 457 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 459 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 459 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 461 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 461 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" : ");

        
        #line default
        #line hidden
        
        #line 461 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 461 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateBase\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 466 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

    public void GenerateStateEventArgs(string state)
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "." + state + "EventArgs.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 481 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 483 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 483 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 485 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 485 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs : EventArgs\r\n    {\r\n\t    public ");

        
        #line default
        #line hidden
        
        #line 487 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 487 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 487 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 487 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { get; set; }\r\n        public ");

        
        #line default
        #line hidden
        
        #line 488 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 488 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent Event { get; set; }\r\n    }\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 492 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateDotFromTransitions()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
        var name = currentClass.Name + "Transitions";
	    var outputFileName = fileName.Replace(".cs", ".Transitions.g.dot");
		

        
        #line default
        #line hidden
        
        #line 507 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("digraph ");

        
        #line default
        #line hidden
        
        #line 508 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(name));

        
        #line default
        #line hidden
        
        #line 508 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { graph [ dpi = 300 ]\r\n    ");

        
        #line default
        #line hidden
        
        #line 509 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(initialState));

        
        #line default
        #line hidden
        
        #line 509 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" [shape=box];\r\n    AnyState [shape=box] [style=dotted];\r\n");

        
        #line default
        #line hidden
        
        #line 511 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        
        foreach (var t in transitions)
        {
            


        
        #line default
        #line hidden
        
        #line 517 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("    ");

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Current));

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" -> ");

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Next));

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" [label=");

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Event));

        
        #line default
        #line hidden
        
        #line 518 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("];\r\n");

        
        #line default
        #line hidden
        
        #line 519 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }
        
        foreach (var s in specials)
        {
            


        
        #line default
        #line hidden
        
        #line 526 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n  AnyState -> ");

        
        #line default
        #line hidden
        
        #line 528 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.Next));

        
        #line default
        #line hidden
        
        #line 528 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" [color=red] [label=");

        
        #line default
        #line hidden
        
        #line 528 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.Event));

        
        #line default
        #line hidden
        
        #line 528 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("];\r\n");

        
        #line default
        #line hidden
        
        #line 529 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }

        
        #line default
        #line hidden
        
        #line 531 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n\r\n\r\n}\r\n");

        
        #line default
        #line hidden
        
        #line 536 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);

        if (!IsGraphvizInstalled())
            return;

        var svgFileName = GenerateImageFromDotFile(outputFileName, outputFileName, "svg");
		projectItem.ProjectItems.AddFromFile(svgFileName);  
        var pngFileName = GenerateImageFromDotFile(outputFileName, outputFileName, "png");
		projectItem.ProjectItems.AddFromFile(pngFileName);  
	}

    private void GenerateTransitions()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
        var name = currentClass.Name + "Transitions";
	    var outputFileName = fileName.Replace(".cs", ".Transitions.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 559 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 561 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 561 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public class ");

        
        #line default
        #line hidden
        
        #line 563 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(name));

        
        #line default
        #line hidden
        
        #line 563 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" : StateTransitionsDefinitionBase\r\n    {\r\n        public override StateTransistio" +
        "n[] Normal\r\n        {\r\n            get \r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 569 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        if (transitions.Count == 0)
        {

        
        #line default
        #line hidden
        
        #line 572 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                return new StateTransistion[0];\r\n");

        
        #line default
        #line hidden
        
        #line 574 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }
        else
        {

        
        #line default
        #line hidden
        
        #line 578 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("             \r\n                return new [] \r\n                {\r\n");

        
        #line default
        #line hidden
        
        #line 581 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

            foreach (var transition in transitions)
            {

        
        #line default
        #line hidden
        
        #line 584 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                    new StateTransistion{ Current = typeof(");

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Current));

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("), Event = ");

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent.");

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Event));

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Next = typeof(");

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Next));

        
        #line default
        #line hidden
        
        #line 585 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(") },\r\n");

        
        #line default
        #line hidden
        
        #line 586 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

            }

        
        #line default
        #line hidden
        
        #line 588 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n                };\r\n");

        
        #line default
        #line hidden
        
        #line 591 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 593 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                 \r\n            }\r\n        }\r\n\r\n        public override StateTrans" +
        "istion[] Special\r\n        {\r\n            get \r\n            {\r\n");

        
        #line default
        #line hidden
        
        #line 601 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        if (specials.Count == 0)
        {

        
        #line default
        #line hidden
        
        #line 604 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                return new StateTransistion[0];\r\n");

        
        #line default
        #line hidden
        
        #line 606 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }
        else
        {

        
        #line default
        #line hidden
        
        #line 610 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("             \r\n                return new [] \r\n                {\r\n");

        
        #line default
        #line hidden
        
        #line 613 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

            foreach (var s in specials)
            {

        
        #line default
        #line hidden
        
        #line 616 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                    new StateTransistion{ Event = ");

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent.");

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.Event));

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Next = typeof(");

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s.Next));

        
        #line default
        #line hidden
        
        #line 617 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(") },\r\n");

        
        #line default
        #line hidden
        
        #line 618 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

            }

        
        #line default
        #line hidden
        
        #line 620 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n                };\r\n");

        
        #line default
        #line hidden
        
        #line 623 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 625 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                 \r\n            }\r\n        }\r\n        \r\n        public override Ty" +
        "pe InitialStateType\r\n        {\r\n            get { return typeof(");

        
        #line default
        #line hidden
        
        #line 631 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(initialState));

        
        #line default
        #line hidden
        
        #line 631 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("); }\r\n        }\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 636 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateEvents()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".StateEvent.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, namespaces);

        
        #line default
        #line hidden
        
        #line 652 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 654 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 654 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public class ");

        
        #line default
        #line hidden
        
        #line 656 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 656 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent : StateEvent\r\n    {\r\n");

        
        #line default
        #line hidden
        
        #line 658 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var evnt in events)
        {

        
        #line default
        #line hidden
        
        #line 661 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        public static ");

        
        #line default
        #line hidden
        
        #line 662 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 662 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent ");

        
        #line default
        #line hidden
        
        #line 662 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 662 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { get;  private set; }\r\n");

        
        #line default
        #line hidden
        
        #line 663 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 665 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        static ");

        
        #line default
        #line hidden
        
        #line 666 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 666 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent()\r\n        {\r\n");

        
        #line default
        #line hidden
        
        #line 668 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var evnt in events)
        {

        
        #line default
        #line hidden
        
        #line 671 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = new ");

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent(\"");

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 672 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\");\r\n");

        
        #line default
        #line hidden
        
        #line 673 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 675 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n        }\r\n\r\n        private ");

        
        #line default
        #line hidden
        
        #line 679 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 679 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent(string name) : base(name)\r\n        {\r\n        }\r\n    }\r\n\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 686 "E:\Development\Crossbase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
    }




        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
