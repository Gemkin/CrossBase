// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 11.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace CrossBase.CodeGeneration.Templates
{
    using Attributes;
    using CrossBase.StateMachine;
    using Language;
    using System.Collections.Generic;
    using System.Diagnostics;
    using System.Text.RegularExpressions;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "11.0.0.0")]
    public partial class StateMachineTemplate : CrossBase.CodeGeneration.Templates.TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public override string TransformText()
        {
            this.Write("\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 9 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

    private const string attributeName = "StateMachine";
    private string initialState;
    private string transitionsString;
    private List<Trans> transitions;
    private List<string> states;
    private Class currentClass;
    private List<string> events;
    private string specialString;
    private List<Spec> specials;

    public static bool IsGraphvizInstalled()
    {
        try
        {
            var command = String.Format("-?");
                
            var processInfo = new ProcessStartInfo("dot", command)
            {
                CreateNoWindow = false,
                UseShellExecute = false,
                RedirectStandardOutput = true,
                RedirectStandardError = true
            };
            var process = Process.Start(processInfo);
            var std = process.StandardOutput.ReadToEnd();
            var error = process.StandardError.ReadToEnd();
            process.WaitForExit();
            process.Close();

            return std.StartsWith("Usage: dot");
        }
        catch (Exception)
        {
            return false;
        }
    }

    private static string GenerateImageFromDotFile(string fileName, string dotFileName, string type)
    {
        var imageFileName = string.Format("{0}.{1}", fileName, type);
        var command = String.Format("-T{2} \"{0}\" -o\"{1}\"", dotFileName, imageFileName, type);
        var processInfo = new ProcessStartInfo("dot", command)
        {
            CreateNoWindow = false,
            UseShellExecute = false,
        };
        var process = Process.Start(processInfo);
        process.WaitForExit();
        process.Close();
        return imageFileName;
    }


    

    public class Trans
    {
        public string Current { get; set; }        
        public string Event { get; set; }        
        public string Next { get; set; }        
    }

    public class Spec
    {
        public string Event { get; set; }        
        public string Next { get; set; }        
    }


    public override void Render()
	{
	    Name = "StateMachine Generator";
		debugOutput = string.Empty;
		var classes = Parser.GetAllClassesThatHaveAnAttribute(attributeName);
		
		foreach(var @class in classes)
		{
		    currentClass = @class;
			GenerateClass();
		}

	    base.Render();
	}

	

	private void GenerateClass()
    {
        
	    foreach (var attribute in currentClass.Attributes)
	    {
	        if (attribute.Name != attributeName)
	            continue;
    	    initialState = @attribute.GetArgument("InitState") + "State";
    	    transitionsString = @attribute.GetArgument("Transitions");
            specialString = @attribute.GetArgument("Special");
	        break;
	    }

	    GetTransistions();
	    GetSpecials();
        GetStates();
        GetEvents();
	    GenerateBaseState();
	    GenerateStateClasses();
	    GenerateMachine();
	    GenerateTransitions();
	    GenerateEvents();
	    GenerateContext();
	    GenerateStateEventArgs();
	    GenerateDotFromTransitions();
    }

    

    private void GenerateStateClasses()
    {
        foreach (var state in states)
        {
            GenerateStateClass(state);
            GenerateStateEventArgs(state);
        }
    }

    private void GetStates()
    {

        states = new List<string> {initialState};
        foreach (var t in transitions)
        {
            AddState(t.Current);
            AddState(t.Next);
        }
    }

    private void GetEvents()
    {
        events = new List<string>();
        foreach (var t in transitions)
        {
            AddEvent(t.Event);
        }

        foreach (var t in specials)
        {
            AddEvent(t.Event);
        }
    }

    private void AddEvent(string s)
    {
        if (!events.Contains(s)) events.Add(s);
    }


    private void AddState(string s)
    {
        if (!states.Contains(s)) states.Add(s);
    }

    private void GetSpecials()
    {
        specials = new List<Spec>();
        foreach (var special in Split(specialString, ';'))
        {
            SplitSpecial(special);
        }
    }

    private void SplitSpecial(string special)
    {
        special = special.Trim();
        var regex = new Regex("\\s*(?<Event>\\w+)\\s*->\\s*(?<Next>\\w+)\\s*",RegexOptions.CultureInvariant| RegexOptions.Compiled);
        var m = regex.Match(special);

        if (m.Success)
        {
            specials.Add(new Spec{Event = m.Groups["Event"].Value, Next = m.Groups["Next"].Value + "State"});
        }
    }


    private void GetTransistions()
    {
        transitions = new List<Trans>();
        foreach (var transition in Split(transitionsString, ';'))
        {
            SplitTransition(transition);
        }
    }

    private void SplitTransition(string transition)
    {
        transition = transition.Trim();
        var regex = new Regex("\\s*(?<Current>\\w+)\\s*\\|\\s*(?<Event>\\w+)\\s*->\\s*(?<Next>\\w+)\\s*",RegexOptions.CultureInvariant| RegexOptions.Compiled);
        var m = regex.Match(transition);

        if (m.Success)
        {
            transitions.Add(new Trans{Current = m.Groups["Current"].Value + "State", Event = m.Groups["Event"].Value, Next = m.Groups["Next"].Value + "State"});
        }
    }

    private static IEnumerable<string> Split(string s, char c)
    {
        return s.Split(new[] {c}, StringSplitOptions.RemoveEmptyEntries);
    }

   
    private void GenerateContext()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "Context.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 227 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 229 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 229 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 231 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 231 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context: IStateContext\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 236 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

    private void GenerateBaseState()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "StateBase.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 251 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 253 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 253 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateBase: BaseState<");

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", ");

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context, ");

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 255 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent>\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 260 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

     private void GenerateStateEventArgs()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "StateChangedEventArgs.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 275 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 277 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 277 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 279 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 279 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateChangedEventArgs:StateChangedEventArgsBase\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 284 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateMachine()
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".g.cs");
		
		GenerateHeader();

		GenerateUsings(@currentClass, new List<string> { "System", "CrossBase.StateMachine", "CrossBase.Dispatch", "CrossBase.Log", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 301 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 303 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 303 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 305 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 305 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(": StateMachineBase< ");

        
        #line default
        #line hidden
        
        #line 305 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 305 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context,  \r\n                                                                     " +
        " ");

        
        #line default
        #line hidden
        
        #line 306 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 306 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Transitions, \r\n                                                                  " +
        "    ");

        
        #line default
        #line hidden
        
        #line 307 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 307 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateChangedEventArgs, \r\n                                                        " +
        "              ");

        
        #line default
        #line hidden
        
        #line 308 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 308 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent>\r\n    {\r\n        public ");

        
        #line default
        #line hidden
        
        #line 310 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 310 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(ILogger log, IDispatcher dispatcher, ");

        
        #line default
        #line hidden
        
        #line 310 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 310 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Context context) : base(log, dispatcher, context)\r\n        {\r\n        }\r\n\r\n      " +
        "  protected override void OnEnteringNextState(SomeStateMachineStateChangedEventA" +
        "rgs e)\r\n        {\r\n            base.OnEnteringNextState(e);\r\n");

        
        #line default
        #line hidden
        
        #line 317 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        var isFirstRender = true;
        foreach (var s in states)
        {
            var ifstatement = isFirstRender ? "if" : "else if";
            isFirstRender = false;

        
        #line default
        #line hidden
        
        #line 323 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 324 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(ifstatement));

        
        #line default
        #line hidden
        
        #line 324 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(e.PrevState is ");

        
        #line default
        #line hidden
        
        #line 324 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 324 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(")\r\n            {\r\n                On");

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave(new  ");

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs {  ");

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = e.PrevState as  ");

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Event = (");

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 326 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent)e.StateEvent });\r\n            }\r\n                        \r\n");

        
        #line default
        #line hidden
        
        #line 329 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 332 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        isFirstRender = true;
        foreach (var s in states)
        {
            var ifstatement = isFirstRender ? "if" : "else if";
            isFirstRender = false;

        
        #line default
        #line hidden
        
        #line 338 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 339 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(ifstatement));

        
        #line default
        #line hidden
        
        #line 339 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("(e.NextState is ");

        
        #line default
        #line hidden
        
        #line 339 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 339 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(")\r\n            {\r\n                On");

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter(new  ");

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs {  ");

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = e.NextState as  ");

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Event = (");

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 341 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent)e.StateEvent });\r\n            }\r\n                        \r\n");

        
        #line default
        #line hidden
        
        #line 344 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 346 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        }\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 349 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var s in states)
        {

        
        #line default
        #line hidden
        
        #line 352 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        public event EventHandler<");

        
        #line default
        #line hidden
        
        #line 353 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 353 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 353 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 353 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave;\r\n        protected virtual void On");

        
        #line default
        #line hidden
        
        #line 354 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 354 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave(");

        
        #line default
        #line hidden
        
        #line 354 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 354 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs e)\r\n        {\r\n            var handler = ");

        
        #line default
        #line hidden
        
        #line 356 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 356 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Leave;\r\n            if (handler != null) handler(this, e);\r\n        }\r\n        pu" +
        "blic event EventHandler<");

        
        #line default
        #line hidden
        
        #line 359 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 359 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs> ");

        
        #line default
        #line hidden
        
        #line 359 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 359 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter;\r\n        protected virtual void On");

        
        #line default
        #line hidden
        
        #line 360 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 360 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter(");

        
        #line default
        #line hidden
        
        #line 360 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 360 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs e)\r\n        {\r\n            var handler = ");

        
        #line default
        #line hidden
        
        #line 362 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(s));

        
        #line default
        #line hidden
        
        #line 362 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("Enter;\r\n            if (handler != null) handler(this, e);\r\n        }\r\n");

        
        #line default
        #line hidden
        
        #line 365 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 367 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 371 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


	public void GenerateStateClass(string state)
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "." + state + ".g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 387 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 389 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 389 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 391 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 391 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" : ");

        
        #line default
        #line hidden
        
        #line 391 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(currentClass.Name));

        
        #line default
        #line hidden
        
        #line 391 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateBase\r\n    {\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 396 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}

    public void GenerateStateEventArgs(string state)
    {
		var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", "." + state + "EventArgs.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 411 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 413 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 413 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public partial class ");

        
        #line default
        #line hidden
        
        #line 415 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 415 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("EventArgs : EventArgs\r\n    {\r\n\t    public ");

        
        #line default
        #line hidden
        
        #line 417 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 417 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" ");

        
        #line default
        #line hidden
        
        #line 417 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(state));

        
        #line default
        #line hidden
        
        #line 417 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { get; set; }\r\n        public ");

        
        #line default
        #line hidden
        
        #line 418 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 418 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent Event { get; set; }\r\n    }\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 422 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateDotFromTransitions()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
        var name = currentClass.Name + "Transitions";
	    var outputFileName = fileName.Replace(".cs", ".Transitions.g.dot");
		

        
        #line default
        #line hidden
        
        #line 437 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("digraph ");

        
        #line default
        #line hidden
        
        #line 438 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(name));

        
        #line default
        #line hidden
        
        #line 438 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { graph [ dpi = 300 ]\r\n");

        
        #line default
        #line hidden
        
        #line 439 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var t in transitions)
        {

        
        #line default
        #line hidden
        
        #line 442 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("    ");

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Current));

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" -> ");

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Next));

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" [label=");

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(t.Event));

        
        #line default
        #line hidden
        
        #line 443 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("];\r\n");

        
        #line default
        #line hidden
        
        #line 444 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }

        
        #line default
        #line hidden
        
        #line 446 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("}\r\n");

        
        #line default
        #line hidden
        
        #line 448 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);

        if (!IsGraphvizInstalled())
            return;

        var svgFileName = GenerateImageFromDotFile(outputFileName, outputFileName, "svg");
		projectItem.ProjectItems.AddFromFile(svgFileName);  
        var pngFileName = GenerateImageFromDotFile(outputFileName, outputFileName, "png");
		projectItem.ProjectItems.AddFromFile(pngFileName);  
	}

        private void GenerateTransitions()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
        var name = currentClass.Name + "Transitions";
	    var outputFileName = fileName.Replace(".cs", ".Transitions.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 471 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 473 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 473 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public class ");

        
        #line default
        #line hidden
        
        #line 475 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(name));

        
        #line default
        #line hidden
        
        #line 475 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" : StateTransitionsDefinitionBase\r\n    {\r\n        public override StateTransistio" +
        "n[] Normal\r\n        {\r\n            get \r\n            { \r\n                return " +
        "new [] \r\n                {\r\n");

        
        #line default
        #line hidden
        
        #line 483 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var transition in transitions)
        {

        
        #line default
        #line hidden
        
        #line 486 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                    new StateTransistion{ Current = typeof(");

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Current));

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("), Event = ");

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent.");

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Event));

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Next = typeof(");

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(transition.Next));

        
        #line default
        #line hidden
        
        #line 487 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(") },\r\n");

        
        #line default
        #line hidden
        
        #line 488 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }

        
        #line default
        #line hidden
        
        #line 490 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n                }; \r\n            }\r\n        }\r\n\r\n        public override StateT" +
        "ransistion[] Special\r\n        {\r\n            get \r\n            { \r\n             " +
        "   return new [] \r\n                {\r\n");

        
        #line default
        #line hidden
        
        #line 502 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var special in specials)
        {

        
        #line default
        #line hidden
        
        #line 505 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("                    new StateTransistion{ Event = ");

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent.");

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(special.Event));

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(", Next = typeof(");

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(special.Next));

        
        #line default
        #line hidden
        
        #line 506 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(") },\r\n");

        
        #line default
        #line hidden
        
        #line 507 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
            
        }

        
        #line default
        #line hidden
        
        #line 509 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n                }; \r\n            }\r\n        }\r\n\r\n        public override Type I" +
        "nitialStateType\r\n        {\r\n            get { return typeof(");

        
        #line default
        #line hidden
        
        #line 517 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(initialState));

        
        #line default
        #line hidden
        
        #line 517 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("); }\r\n        }\r\n\t}\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 522 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
	}


    private void GenerateEvents()
    {
        var fileName = currentClass.FileWithShortestName();
		var projectItem = Parser.GetProjectItem(fileName);
		var outputFileName = fileName.Replace(".cs", ".StateEvent.g.cs");
		
		GenerateHeader();
		GenerateUsings(@currentClass, new List<string> { "System", @currentClass.Namespace.Name});

        
        #line default
        #line hidden
        
        #line 538 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\nnamespace ");

        
        #line default
        #line hidden
        
        #line 540 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Namespace.Name));

        
        #line default
        #line hidden
        
        #line 540 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\t\r\n{\r\n    public class ");

        
        #line default
        #line hidden
        
        #line 542 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 542 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent : StateEvent\r\n    {\r\n");

        
        #line default
        #line hidden
        
        #line 544 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var evnt in events)
        {

        
        #line default
        #line hidden
        
        #line 547 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        public static ");

        
        #line default
        #line hidden
        
        #line 548 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 548 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent ");

        
        #line default
        #line hidden
        
        #line 548 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 548 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" { get;  private set; }\r\n");

        
        #line default
        #line hidden
        
        #line 549 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 551 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("        static ");

        
        #line default
        #line hidden
        
        #line 552 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 552 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent()\r\n        {\r\n");

        
        #line default
        #line hidden
        
        #line 554 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        foreach (var evnt in events)
        {

        
        #line default
        #line hidden
        
        #line 557 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("            ");

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(" = new ");

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent(\"");

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(evnt));

        
        #line default
        #line hidden
        
        #line 558 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\");\r\n");

        
        #line default
        #line hidden
        
        #line 559 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

        }

        
        #line default
        #line hidden
        
        #line 561 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("\r\n        }\r\n\r\n        private ");

        
        #line default
        #line hidden
        
        #line 565 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(@currentClass.Name));

        
        #line default
        #line hidden
        
        #line 565 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"
this.Write("StateEvent(string name) : base(name)\r\n        {\r\n        }\r\n    }\r\n\r\n}\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 572 "C:\projects\CrossBase\CrossBase.CodeGeneration\Templates\StateMachineTemplate.tt"

		GenerateFooter();
		debugOutput += string.Format("Generated {0}\r\n", outputFileName);
		Delete(projectItem, outputFileName);
		Save(projectItem, outputFileName);
    }




        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
}
